package com.inovel.setting.view.windowdialog;

import android.content.Context;
import android.util.AttributeSet;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.view.View;

import com.inovel.setting.R;
import com.inovel.setting.util.PowerKeyUtils;
import com.lunzn.tool.autofit.AutoFrameLayout;
import com.lunzn.tool.log.LogUtil;
import com.lz.aiui.window.GlobalWindow;

/**
 * Desc: 点击Power键的View
 * <p>
 * Author: zhoulai
 * PackageName: com.inovel.setting.view.windowdialog
 * ProjectName: anwServer
 * Date: 2018/12/18 10:15
 */
public class DialogContentLayout extends AutoFrameLayout implements View.OnClickListener {

    private static final String TAG = DialogContentLayout.class.getSimpleName();

    public DialogContentLayout(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
        init();
    }


    public DialogContentLayout(Context context, AttributeSet attrs) {
        super(context, attrs);
        init();
    }

    public DialogContentLayout(Context context) {
        super(context);
        init();
    }

    /**
     * 初始化布局
     */
    private void init() {
        LayoutInflater.from(getContext()).inflate(R.layout.layout_power_key, this, true);
        View shotDownView = findViewById(R.id.btn_shot_down);
        shotDownView.requestFocusFromTouch();
        shotDownView.setOnClickListener(this);
        findViewById(R.id.btn_screen_off).setOnClickListener(this);
        findViewById(R.id.btn_restart).setOnClickListener(this);

    }

    @Override
    public boolean dispatchKeyEvent(KeyEvent keyEvent) {
        if (null != mListener) {
            mListener.onKeyEvent(keyEvent);
        }
        if (keyEvent.getAction() == KeyEvent.ACTION_UP) {
            switch (keyEvent.getKeyCode()) {
                case KeyEvent.KEYCODE_BACK:
                case KeyEvent.KEYCODE_MENU:
                    // 隐藏夜间
                    GlobalWindow.getInstance()
                            .with(getContext().getApplicationContext())
                            .hide(this);
                    break;
            }
        }
        return super.dispatchKeyEvent(keyEvent);
    }

    private OnKeyEventListener mListener;

    public void setOnKeyEventListener(OnKeyEventListener listener) {
        mListener = listener;
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btn_screen_off:
                LogUtil.i(TAG, "screen_off");
                PowerKeyUtils.screenOffOrOn();
                break;
            case R.id.btn_restart:
                LogUtil.i(TAG, "restart");
                PowerKeyUtils.reboot(getContext());
                break;
            case R.id.btn_shot_down:
                LogUtil.i(TAG, "shot_down");
                PowerKeyUtils.shotDown(getContext());
                break;
        }
    }

    interface OnKeyEventListener {
        void onKeyEvent(KeyEvent keyEvent);
    }


}
